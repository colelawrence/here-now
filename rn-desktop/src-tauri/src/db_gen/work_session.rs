//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "WorkSession")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub started_at: i32,
    pub ended_at: Option<i32>,
    pub active_todo_id: Option<String>,
    pub active_todo_started_at: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::todo::Entity",
        from = "Column::ActiveTodoId",
        to = "super::todo::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Todo,
    #[sea_orm(has_many = "super::todo_time_entry::Entity")]
    TodoTimeEntry,
}

impl Related<super::todo::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Todo.def()
    }
}

impl Related<super::todo_time_entry::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TodoTimeEntry.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
