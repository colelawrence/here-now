//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "TodoTimeEntry")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub for_todo_id: i32,
    pub during_work_session_id: i32,
    pub start_time: DateTime,
    pub end_time: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::todo::Entity",
        from = "Column::ForTodoId",
        to = "super::todo::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Todo,
    #[sea_orm(
        belongs_to = "super::work_session::Entity",
        from = "Column::DuringWorkSessionId",
        to = "super::work_session::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    WorkSession,
}

impl Related<super::todo::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Todo.def()
    }
}

impl Related<super::work_session::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::WorkSession.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
